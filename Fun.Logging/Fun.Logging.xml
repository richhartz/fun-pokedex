<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Fun.Logging</name>
    </assembly>
    <members>
        <member name="T:Fun.Logging.FunExceptionHandlingMiddleware">
            <summary>
            Defines the FunExceptionHandlingMiddleware class.
            </summary>
        </member>
        <member name="M:Fun.Logging.FunExceptionHandlingMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate)">
            <summary>
            Initializes a new instance of the <see cref="T:Fun.Logging.FunExceptionHandlingMiddleware"/> class.
            </summary>
            <param name="next">The <see cref="T:Microsoft.AspNetCore.Http.RequestDelegate"/>.</param>
        </member>
        <member name="M:Fun.Logging.FunExceptionHandlingMiddleware.Invoke(Microsoft.AspNetCore.Http.HttpContext)">
            <summary>
            Invokes the next delegate.
            </summary>
            <param name="context">The <see cref="T:Microsoft.AspNetCore.Http.HttpContext"/>.</param>
            <returns>A <see cref="T:System.Threading.Tasks.Task"/>.</returns>
        </member>
        <member name="T:Fun.Logging.Startup.FunLoggingAppBuilderExtensions">
            <summary>
            IApplicationBuilder extensions to set up error handling.
            </summary>
        </member>
        <member name="M:Fun.Logging.Startup.FunLoggingAppBuilderExtensions.UseFunExceptionHandler(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Sets up the error handling middleware.
            </summary>
            <param name="app">the <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
            <returns>The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/> which middleware added.</returns>
        </member>
        <member name="T:Fun.Logging.Startup.FunLoggingServiceCollectionExtensions">
            <summary>
            Extension methods to use Logging features.
            </summary>
        </member>
        <member name="M:Fun.Logging.Startup.FunLoggingServiceCollectionExtensions.AddFunLogging(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.String,System.String)">
            <summary>
            Configures logging for the application.
            </summary>
            <param name="services">The services collection of this application.</param>
            <param name="serviceName">Service name to log.</param>
            <param name="serviceVersion">Version to log.</param>
            <returns>The modified service collection.</returns>
        </member>
        <member name="M:Fun.Logging.Startup.FunLoggingServiceCollectionExtensions.UseFunLogging(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configures logging for the application.
            </summary>
            <param name="builder">The <see cref="T:Microsoft.AspNetCore.Builder.IApplicationBuilder"/>.</param>
        </member>
    </members>
</doc>
